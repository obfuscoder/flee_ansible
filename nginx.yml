- hosts: all
  tasks:
  - name: Disable the default site
    file:
      path: /etc/nginx/sites-enabled/default
      state: absent
  - name: add flohmarkthelfer site
    copy:
      dest: /etc/nginx/sites-available/flohmarkthelfer
      content: |
        server {
          listen 80;
          server_name flohmarkthelfer;

          # path for static files
          root /home/flohmarkthelfer/www/current/public;
          access_log /home/flohmarkthelfer/log/nginx.access.log;
          error_log /home/flohmarkthelfer/log/nginx.error.log info;

          # this rewrites all the requests to the maintenance.html
          # page if it exists in the doc root. This is for capistrano's
          # disable web task
          if (-f $document_root/maintenance.html) {
            rewrite  ^(.*)$  /maintenance.html last;
            break;
          }

          location / {
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;

            # If the file exists as a static file serve it directly without
            # running all the other rewrite tests on it
            if (-f $request_filename) {
              break;
            }

            # check for index.html for directory index
            # if it's there on the filesystem then rewrite
            # the url to add /index.html to the end of it
            # and then break to send it to the next config rules.
            if (-f $request_filename/index.html) {
              rewrite (.*) $1/index.html break;
            }

            # this is the meat of the rack page caching config
            # it adds .html to the end of the url and then checks
            # the filesystem for that file. If it exists, then we
            # rewrite the url to have explicit .html on the end
            # and then send it on its way to the next config rule.
            # if there is no file on the fs then it sets all the
            # necessary headers and proxies to our upstream pumas
            if (-f $request_filename.html) {
              rewrite (.*) $1.html break;
            }

            if (!-f $request_filename) {
              proxy_pass http://localhost:9292;
              break;
            }
          }

          # Now this supposedly should work as it gets the filenames with querystrings that Rails provides.
          # BUT there's a chance it could break the ajax calls.
          location ~* \.(ico|css|gif|jpe?g|png|js)(\?[0-9]+)?$ {
            expires max;
            break;
          }
        }
  - name: enable flohmarkthelfer site
    file:
      src: /etc/nginx/sites-available/flohmarkthelfer
      dest: /etc/nginx/sites-enabled/flohmarkthelfer
      state: link
  - name: restart nginx
    service:
      name: nginx
      state: restarted

